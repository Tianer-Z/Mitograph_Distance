#!/usr/bin/env python

"""
This scripts calculates the distance from pre-identified
foci to the mitochondrial surface. The foci are stored in
in a table containing the x, y and z coordinates and the
pixel intensity. Foci were identified using TrackMate, ImageJ Plug
in [1]. The mitochondrial surface is represented by a vtk polydata
generated by using the software [2].

[1] - TrackMate: https://imagej.net/TrackMate
[2] - MitoGraph: https://github.com/vianamp/MitoGraph
"""

import os
import vtk
import math
import numpy
import paraview.servermanager

def GetNumberOfTimeSteps():
    """
    Find total number of time points in the data
    """
    Name = GetSources().keys()[0][0]
    return numpy.size(FindSource(Name).TimestepValues)

# Get current views
Views = GetViews()

# Get number of time points
NTimeSteps = GetNumberOfTimeSteps()
print "Number of time steps = %d" %(NTimeSteps)

# Finding the names of source1 and source2
Sources = GetSources()
S1Name = Sources.keys()[0][0]
S2Name = Sources.keys()[1][0]

# Swap sources if polydata is source2
if FindSource(S1Name).GetDataInformation().GetDataClassName() != 'vtkPolyData':
    S1Name, S2Name = S2Name, S1Name

# Path to save the results
Path = os.path.dirname(FindSource(S1Name).FileNames[1])

fsave = open("%s/results.txt"%(Path), 'w')
fsave.write("TimePoint\tPixelIntensity\tOrder\tDistance\n")

# Loop over all time points
for time in range(0,NTimeSteps):

    # Updating time
    for view in range(0,numpy.size(Views)):
        SetActiveView(Views[view])
        GetActiveView().ViewTime = time
        Render()

    # Mitochondrial surface
    Surface = servermanager.Fetch(FindSource(S1Name))

    # Display number of points in the mitochodrial surface
    #print "Number of points on Surface[%d] = %d" %(time,Surface.GetNumberOfPoints())

    # Creating the point locator
    Locator = vtk.vtkPointLocator()
    Locator.SetDataSet(Surface)
    Locator.BuildLocator()

    # Table with coordinates of pre-identified foci
    XYZTable = servermanager.Fetch(FindSource(S2Name))

    # Display number of foci
    #print "Number of foci = %d" %(XYZTable.GetNumberOfRows())

    # Loop over each foci
    dist = []
    max_intensity = 0
    brightest_foci = 0
    for row in range(0,XYZTable.GetNumberOfRows()):
        
        line = XYZTable.GetValue(row,0)
        x, y, z, pixel = [ float(v) for v in (line.ToString()).split() ]
        r = [x, y, z]

        # Looking for the closest point on the mitochondrial surface
        ptId = Locator.FindClosestPoint(r)
        u = Surface.GetPoints().GetPoint(ptId)

        # Calculating the distance to the closest point
        d = math.sqrt((r[0]-u[0])**2+(r[1]-u[1])**2+(r[2]-u[2])**2)

        dist = dist + [d]

        # Save results
        fsave.write("%d \t %1.3f \t %d \t %1.3f\n" %(time,pixel,row,d))

fsave.close()
